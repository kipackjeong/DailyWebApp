@page "/todo"
@using System.Threading
@using Microsoft.EntityFrameworkCore.Internal
@using ToDoWebApp.Data
@using ToDoWebApp.Model
@inject IToDoData ToDoItemData

<h3>ToDoPage</h3>

<EditForm Model="@_toDoList">
    <table class="table">
        <thead>
            <tr>
                <th><i class="oi oi-document"></i>Title</th>
                <th><i class="oi oi-calendar"></i>Date</th>
                <th><i class="oi oi-check"></i>Done</th>
                <th><i class="oi oi-trash"></i></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _toDoList)
            {
                <tr>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.DateTimeCreated.ToString("hh:mm tt")
                    </td>
                    <td>
                        <InputCheckbox @bind-Value="@item.DoneBool"></InputCheckbox>
                    </td>
                    <td>
                        <button class="btn btn-outline-primary" @onclick="(() => DeleteToDo(item))"> Delete </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</EditForm>
<form>
    <input placeholder="What do you need to do?" @bind="_newItemTitle" />
    <button class="btn btn-primary" @onclick="AddToDo"> Add </button>
</form>







@code {
    public IList<ToDoItem> _toDoList = new List<ToDoItem>();
    private string _newItemTitle { get; set; }


    private async Task AddToDo()
    {

        var newToDoItem = new ToDoItem(_newItemTitle, DateTime.Now);

        await ToDoItemData.InsertItem(newToDoItem);

        _newItemTitle = string.Empty;

        _toDoList = await ToDoItemData.GetTodayToDoItem();
    }

    private async Task DeleteToDo(ToDoItem item)
    {
        await ToDoItemData.DeleteItem(item);

        _toDoList = await ToDoItemData.GetTodayToDoItem();
    }
    protected override async Task OnInitializedAsync()
    {
        _toDoList = await ToDoItemData.GetTodayToDoItem();
    }
}